diff -up javapackages-5.3.0/etc/javapackages-config.json.omv~ javapackages-5.3.0/etc/javapackages-config.json
--- javapackages-5.3.0/etc/javapackages-config.json.omv~	2019-03-05 18:01:15.986765056 +0100
+++ javapackages-5.3.0/etc/javapackages-config.json	2019-03-05 18:03:55.036156333 +0100
@@ -1,8 +1,5 @@
 {
     "maven.req": {
-        "always_generate": [
-            "javapackages-filesystem"
-        ],
         "java_requires": {
             "package_name": "java-headless",
             "always_generate": true,
@@ -13,10 +10,5 @@
             "always_generate": false,
             "skip": false
         }
-    },
-    "javadoc.req": {
-        "always_generate": [
-            "javapackages-filesystem"
-        ]
     }
 }
diff -up javapackages-5.3.0/etc/javapackages-config-SCL.json.omv~ javapackages-5.3.0/etc/javapackages-config-SCL.json
diff -up javapackages-5.3.0/test/javadoc_req_test.py.omv~ javapackages-5.3.0/test/javadoc_req_test.py
--- javapackages-5.3.0/test/javadoc_req_test.py.omv~	2019-03-05 18:04:59.914724051 +0100
+++ javapackages-5.3.0/test/javadoc_req_test.py	2019-03-05 18:05:20.271902205 +0100
@@ -8,7 +8,6 @@ class TestJavadocReq(unittest.TestCase):
     @javadocreq(["something", "that's ignored anyway"])
     def test_javadoc(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
-        self.assertEqual("javapackages-filesystem\n", stdout)
 
     @javadocreq([], javaconfdirs=["javadoc/first", "javadoc/second"])
     def test_configuration(self, stdout, stderr, return_value):
diff -up javapackages-5.3.0/test/maven_req_test.py.omv~ javapackages-5.3.0/test/maven_req_test.py
--- javapackages-5.3.0/test/maven_req_test.py.omv~	2019-03-05 18:05:27.240963196 +0100
+++ javapackages-5.3.0/test/maven_req_test.py	2019-03-05 18:09:41.047439447 +0100
@@ -21,7 +21,7 @@ class TestMavenReq(unittest.TestCase):
     def test_require1(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "mvn(org.apache.maven:maven-project)")
         self.assertEqual(set(want), set(sout))
 
@@ -29,48 +29,48 @@ class TestMavenReq(unittest.TestCase):
     def test_require_java(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:1.6")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 1.6")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java2/buildroot/usr/share/maven-metadata/require.xml"])
     def test_require_java2(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:1.8")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 1.8")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java3/buildroot/usr/share/maven-metadata/require.xml"])
     def test_require_java3(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:1.8")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 1.8")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java9/buildroot/usr/share/maven-metadata/require.xml"])
     def test_require_java9(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:9")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 9")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java10/buildroot/usr/share/maven-metadata/require.xml"])
     def test_require_java10(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:10")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 10")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java9and10/buildroot/usr/share/maven-metadata/require.xml"])
     def test_require_java9and10(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "mvn(org.apache.maven:maven-project)",
-                "java-headless >= 1:10")
+        want = ("mvn(org.apache.maven:maven-project)",
+                "java-headless >= 10")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["require-java-fail/buildroot/usr/share/maven-metadata/require.xml"])
@@ -83,7 +83,7 @@ class TestMavenReq(unittest.TestCase):
     def test_require_parent(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "ns-mvn(org.codehaus.plexus:plexus-ant-factory)")
         self.assertEqual(set(want), set(sout))
 
@@ -91,7 +91,7 @@ class TestMavenReq(unittest.TestCase):
     def test_require_multi(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "ns-mvn(org.codehaus.plexus:plexus-ant-factory)",
+        want = ("ns-mvn(org.codehaus.plexus:plexus-ant-factory)",
                 "ns-mvn(codehaus:plexus-utils) = 1.2", "java-headless",
                 "mvn(org.apache.maven.wagon:wagon-provider-api::test-jar:)")
         self.assertEqual(set(want), set(sout))
@@ -100,7 +100,7 @@ class TestMavenReq(unittest.TestCase):
     def test_require_multi_namespace(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "ns2-mvn(codehaus:plexus-cipher)", "ns-mvn(codehaus:plexus-utils)",
                 "mvn(org.apache.maven.wagon:wagon-provider-api::test-jar:)")
         self.assertEqual(set(want), set(sout))
@@ -109,8 +109,7 @@ class TestMavenReq(unittest.TestCase):
     def test_require_multi_versioned(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("java-headless", "javapackages-filesystem",
-                "ns-mvn(org.codehaus.plexus:plexus-ant-factory:1.0) = 1.0",
+        want = ("ns-mvn(org.codehaus.plexus:plexus-ant-factory:1.0) = 1.0",
                 "ns-mvn(codehaus:plexus-utils:1.2)",
                 "ns-mvn(codehaus:plexus-cipher:1.0) = 1.1",
                 "mvn(org.apache.maven.wagon:wagon-provider-api::test-jar:)",
@@ -121,7 +120,7 @@ class TestMavenReq(unittest.TestCase):
     def test_mixed(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "ns-mvn(org.codehaus.plexus:plexus-ant-factory)",
                 "ns-mvn(codehaus:plexus-utils) = 1.2",
                 "mvn(org.apache.maven.wagon:wagon-provider-api::test-jar:)",
@@ -132,7 +131,7 @@ class TestMavenReq(unittest.TestCase):
     def test_simple_subpackage(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "mvn(org.apache.maven:maven-plugin-api) = 3.2.1")
         self.assertEqual(set(want), set(sout))
 
@@ -140,7 +139,7 @@ class TestMavenReq(unittest.TestCase):
     def test_simple_subpackage2(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "mvn(org.apache.maven:maven-plugin-api) = 3.2.1",
                 "mvn(org.codehaus.plexus:plexus-utils)")
         self.assertEqual(set(want), set(sout))
@@ -149,7 +148,7 @@ class TestMavenReq(unittest.TestCase):
     def test_simple_subpackage3(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                  "mvn(org.apache.maven:maven-plugin-api:3.2.0) = 3.2.1")
         self.assertEqual(set(want), set(sout))
 
@@ -157,7 +156,7 @@ class TestMavenReq(unittest.TestCase):
     def test_simple_subpackage4(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "mvn(org.apache.maven:maven-plugin-api)")
         self.assertEqual(set(want), set(sout))
 
@@ -165,7 +164,7 @@ class TestMavenReq(unittest.TestCase):
     def test_simple_artifact_in_same_package(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless")
+        want = ("java-headless")
         self.assertEqual(set(want), set(sout))
 
     #test for rhbz#1012980
@@ -183,7 +182,7 @@ class TestMavenReq(unittest.TestCase):
     def test_rhbz1017701_c2(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless",
+        want = ("java-headless",
                 "maven31-mvn(org.eclipse.aether:aether-api) = 0.9.0.M3")
         self.assertEqual(set(want), set(sout))
 
@@ -230,7 +229,7 @@ class TestMavenReq(unittest.TestCase):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
         want = ("mvn(org.fedoraproject.xmvn:xmvn-core)",
-                "java-headless", "javapackages-filesystem",
+                "java-headless",
                 "mvn(org.fedoraproject.xmvn:xmvn-api)")
         self.assertEqual(set(want), set(sout))
 
@@ -239,7 +238,7 @@ class TestMavenReq(unittest.TestCase):
     def test_deps_from_pom_with_parent(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("mvn(plugin:external)", "javapackages-filesystem",
+        want = ("mvn(plugin:external)",
                 "mvn(ppom:parent-pom:pom:)", "java-headless")
         self.assertEqual(set(want), set(sout))
 
@@ -248,7 +247,7 @@ class TestMavenReq(unittest.TestCase):
     def test_deps_from_pom_on_subpkg(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("mvn(extension:from-subpackage) = 1.1", "javapackages-filesystem",
+        want = ("mvn(extension:from-subpackage) = 1.1",
                 "mvn(ppom:parent-pom:pom:)", "java-headless")
         self.assertEqual(set(want), set(sout))
 
@@ -270,28 +269,28 @@ class TestMavenReq(unittest.TestCase):
     def test_osgi_basic(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("osgi(osgi.req1)", "javapackages-filesystem", "java-headless")
+        want = ("osgi(osgi.req1)", "java-headless")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["osgi_self/buildroot/usr/share/maven-metadata/require.xml"])
     def test_osgi_self(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("javapackages-filesystem", "java-headless")
+        want = ("java-headless")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["osgi_versioned/buildroot/usr/share/maven-metadata/require.xml"])
     def test_osgi_versioned(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("osgi(osgi.req1) = 1.0", "javapackages-filesystem", "java-headless")
+        want = ("osgi(osgi.req1) = 1.0", "java-headless")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["osgi_versioned_ns/buildroot/usr/share/maven-metadata/require.xml"])
     def test_osgi_versioned_ns(self, stdout, stderr, return_value):
         self.assertEqual(return_value, 0, stderr)
         sout = [x for x in stdout.split('\n') if x]
-        want = ("devtoolset-3-osgi(osgi.req1) = 1.0", "javapackages-filesystem", "java-headless")
+        want = ("devtoolset-3-osgi(osgi.req1) = 1.0", "java-headless")
         self.assertEqual(set(want), set(sout))
 
     @mavenreq(["dashes/buildroot/usr/share/maven-metadata/require.xml"])
