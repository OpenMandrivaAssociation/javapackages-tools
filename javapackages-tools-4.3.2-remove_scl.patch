--- javapackages-4.3.2/java-utils/mvn_artifact.py.orig
+++ javapackages-4.3.2/java-utils/mvn_artifact.py
@@ -88,7 +88,7 @@
     pass
 
 
-def get_parent_pom(pom, scl=None):
+def get_parent_pom(pom):
     try:
         metadata = Metadata(config)
         known_artifacts = metadata.get_provided_artifacts()
@@ -103,7 +103,7 @@
 
     req = ResolutionRequest(pom.groupId, pom.artifactId,
                             extension="pom", version=pom.version)
-    result = XMvnResolve.process_raw_request([req], scl=scl)[0]
+    result = XMvnResolve.process_raw_request([req])[0]
     if not result:
         raise Exception("Unable to resolve parent POM")
 
@@ -169,7 +169,7 @@
         d.interpolate(props)
 
 
-def gather_dependencies(pom_path, scl=None):
+def gather_dependencies(pom_path):
     if not pom_path:
         return []
     pom = POM(pom_path)
@@ -189,7 +189,7 @@
             except PomLoadingException:
                 pass
         if not ppom:
-            ppom = get_parent_pom(parent, scl=scl)
+            ppom = get_parent_pom(parent)
 
         parent = ppom.parent
         pom_props = get_model_variables(ppom)
@@ -300,7 +300,7 @@
     if (not options.skip_dependencies and pom_path
        and not is_it_ivy_file(pom_path)):
         deps = []
-        mvn_deps = gather_dependencies(pom_path, scl=options.namespace)
+        mvn_deps = gather_dependencies(pom_path)
         for d in mvn_deps:
             deps.append(MetadataDependency.from_mvn_dependency(d))
         if deps:
